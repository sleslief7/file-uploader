// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  username      String?
  email         String?
  password      String?
  googleId      String?
  profileImgUrl String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  files         File[]   @relation("OwnedFile")
  folders       Folder[] @relation("OwnedFolder")
  sharedFolders Folder[] @relation("SharedFolder")
  sharedFiles   File[]   @relation("SharedFile")
}

model Folder {
  id             Int      @id @default(autoincrement())
  name           String
  ownerId        Int
  parentFolderId Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  isFavorite Boolean  @default(false)

  owner        User     @relation("OwnedFolder", fields: [ownerId], references: [id], onDelete: Cascade)
  folders      Folder[] @relation("FolderToFolder")
  files        File[]   @relation("FolderToFile")
  editors      User[]   @relation("SharedFolder")
  parentFolder Folder?  @relation("FolderToFolder", fields: [parentFolderId], references: [id], onDelete: Cascade)
}

model File {
  id         Int      @id @default(autoincrement())
  name       String
  folderId   Int?
  ownerId    Int
  mimeType   String
  path       String
  bucket     String
  size       Int
  isFavorite Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  owner   User    @relation("OwnedFile", fields: [ownerId], references: [id], onDelete: Cascade)
  folder  Folder? @relation("FolderToFile", fields: [folderId], references: [id], onDelete: Cascade)
  editors User[]  @relation("SharedFile")
}

model Session {
  id        String   @id @default(cuid())
  sid       String   @unique
  data      String
  expiresAt DateTime @map("expire")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
