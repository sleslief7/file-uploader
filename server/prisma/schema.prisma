// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  name String
  username String?
  email String?
  password String?
  googleId String?
  profileImgUrl String?
  folders Folder[]
  files File[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Folder {
  id Int @id @default(autoincrement())
  name String
  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId Int 
  parentFolder Folder? @relation("ParentFolderToChildFolder", fields: [parentFolderId], references: [id], onDelete: Cascade)
  parentFolderId Int?
  folders Folder[] @relation("ParentFolderToChildFolder")
  files File[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id Int @id @default(autoincrement())
  name String
  folder Folder? @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId Int?
  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId Int
  url String
  size String
  isFavorite Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}